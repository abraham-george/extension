name: Node.js CI

on:
  push:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present

    - name: Upload dist folder as artifact
      uses: actions/upload-artifact@v4
      with:
        name: dist-folder
        path: dist/
    - name: Download dist folder artifact
      uses: actions/download-artifact@v5
      with:
        name: dist-folder
        path: downloaded-dist
    - name: List contents of downloaded dist folder
      run: ls -lR downloaded-dist

    - name: Install jsonwebtoken
      run: npm install jsonwebtoken

    # Generate JWT and save to file
    - name: Create JWT generation script
      run: |
        cat << 'EOF' > generate-jwt.js
        const fs = require('fs');
        const jwt = require('jsonwebtoken');
        const privateKey = process.env.JWT_PRIVATE_KEY;
        const payload = {
          sub: 'ageorge_test',
          iss: 'emPublicApi',
          exp: 1761149932,
          jti: '1234',
          aud: '/authToken'
        };
        const token = jwt.sign(payload, privateKey, { algorithm: 'RS256' });
        fs.writeFileSync('signed-jwt.txt', token);
        EOF
    - name: Generate JWT
      env:
        JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
      run: node generate-jwt.js

    - name: Upload signed JWT as artifact
      uses: actions/upload-artifact@v4
      with:
        name: signed-jwt
        path: signed-jwt.txt

    # Make curl request with JWT to get authToken
    - name: Retrieve authToken using JWT
      run: |
        jwt=$(cat signed-jwt.txt)
        curl -X POST "https://help.linkedin.com/AgentWeb/api/elementmanager/authentication/authToken" \
          -H "accept: application/json" \
          -H "Authorization: Bearer $jwt" \
          -H "interfaceUrl: https://help.linkedin.com/cgi-bin/linkedin.cfg" \
          -o auth-response.json

    # Upload the response as artifact
    - name: Upload authToken response
      uses: actions/upload-artifact@v4
      with:
        name: auth-response
        path: auth-response.json