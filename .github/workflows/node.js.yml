name: Node.js CI

on:
  push:
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run build --if-present

      - name: Create base64 from dist folder
        run: |
          export TZ=UTC
          export LC_ALL=C
          find dist/ -type f -exec touch -t 202301010000 {} \;
          zip -rX --compression-method store --quiet extension.zip dist/
          base64 -w 0 extension.zip > extension_base64.txt

          echo "Generated base64 file size: $(wc -c < extension_base64.txt) bytes"
          echo "Entire generated base64:"
          cat extension_base64.txt
          echo ""

      # Install jsonwebtoken for JWT creation
      - name: Install jsonwebtoken
        run: npm install jsonwebtoken

      # Generate JWT and save to file
      - name: Create JWT generation script
        run: |
          cat << 'EOF' > generate-jwt.js
          const fs = require('fs');
          const jwt = require('jsonwebtoken');
          const privateKey = process.env.JWT_PRIVATE_KEY;
          const payload = {
            sub: 'ageorge_test',
            iss: 'emPublicApi',
            exp: 1761149932,
            jti: '1234',
            aud: '/authToken'
          };
          const token = jwt.sign(payload, privateKey, { algorithm: 'RS256' });
          fs.writeFileSync('signed-jwt.txt', token);
          EOF
      - name: Generate JWT
        env:
          JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
        run: node generate-jwt.js

      - name: Upload signed JWT as artifact
        uses: actions/upload-artifact@v4
        with:
          name: signed-jwt
          path: signed-jwt.txt

      # Get authToken from API using JWT
      - name: Retrieve authToken using JWT
        run: |
          jwt=$(cat signed-jwt.txt)
          curl -X POST "https://help.linkedin.com/AgentWeb/api/elementmanager/authentication/authToken" \
            -H "accept: application/json" \
            -H "Authorization: Bearer $jwt" \
            -H "interfaceUrl: https://help.linkedin.com/cgi-bin/linkedin.cfg" \
            -o auth-response.json

      # Upload the response as artifact
      - name: Upload authToken response
        uses: actions/upload-artifact@v4
        with:
          name: auth-response
          path: auth-response.json

      # Download auth response artifact before extracting token
      - name: Download auth response artifact
        uses: actions/download-artifact@v5
        with:
          name: auth-response
          path: ./

      # Extract USERSESSION token from authToken response
      - name: Extract USERSESSION token
        run: |
          echo "Checking if auth-response.json exists:"
          ls -la auth-response.json
          echo "Contents of auth-response.json:"
          cat auth-response.json
          echo "Extracting token:"
          jq -r .token auth-response.json > usersession.txt
          echo "USERSESSION token:"
          cat usersession.txt

      # Make import API call to EMPackages
      - name: Import EMPackages via API
        run: |
          PACKAGE_CONTENT=$(cat extension_base64.txt)
          USERSESSION=$(cat usersession.txt)
          echo "Package content length: ${#PACKAGE_CONTENT}"
          echo "USERSESSION: $USERSESSION"

          # Create JSON payload
          JSON_PAYLOAD='{
            "name": "ExtensionCustomImport",
            "packageContent": "'"$PACKAGE_CONTENT"'",
            "importType": "CustomImport",
            "attributes": {
              "customImportAttributes": {
                "itemName": "SampleExtensionName5",
                "itemType": "BrowserExtension",
                "extensionAttributes": {
                  "extensionType": "Console",
                  "extensionInitFile": "dist/ciExtension/index.html",
                  "notes": "This is a test comment"
                }
              }
            }
          }'

          echo "=== CURL COMMAND DEBUG ==="
          echo "URL: https://help.linkedin.com/AgentWeb/api/elementmanager/import/EMPackages"
          echo "Headers:"
          echo "  accept: application/json"
          echo "  USERSESSION: $USERSESSION"
          echo "  API_VERSION: 1"
          echo "  Content-Type: application/json"
          echo "JSON Payload"
          echo "$JSON_PAYLOAD"
          echo "=========================="

          curl -X POST "https://help.linkedin.com/AgentWeb/api/elementmanager/import/EMPackages" \
            -H "accept: application/json" \
            -H "USERSESSION: $USERSESSION" \
            -H "API_VERSION: 1" \
            -H "Content-Type: application/json" \
            -d "$JSON_PAYLOAD" \
            -o import-response.json

      # Upload the import response
      - name: Upload import response
        uses: actions/upload-artifact@v4
        with:
          name: import-response
          path: import-response.json
